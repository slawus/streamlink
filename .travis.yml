git:
  depth: 999999

os: linux
dist: trusty
sudo: true

language: python

env:
  global:
    - STREAMLINK_DIST_DIR=${TRAVIS_BUILD_DIR}/dist
    - STREAMLINK_INSTALLER_DIST_DIR=${STREAMLINK_DIST_DIR}/nsis
    - SIGNING_KEY_FILE="${TRAVIS_BUILD_DIR}/signing.key"


stages:
  - test
  - deploy


install:
  - python --version
  - python -m pip install --disable-pip-version-check --upgrade pip setuptools
  - python -m pip install --upgrade -r dev-requirements.txt
  - python -m pip install pycountry
  - python -m pip install -e .

script:
  - pytest --cov
  - codecov


x-windows-installer: &x-windows-installer
  python: '3.5'
  addons:
    apt:
      packages:
        - nsis
        - imagemagick
        - inkscape
  before_script:
    - python -m pip install git+https://github.com/takluyver/pynsist.git@88f56f9e86af9c55522147a67f8b7806ac2ca55b
  script: ./script/makeinstaller.sh


jobs:
  include:
    # tests: Linux + Windows
    - stage: test
      python: '2.7'
    - python: '3.4'
    - python: '3.5'
    - python: '3.6'
    - python: '3.7'
      dist: xenial
    - python: '3.8-dev'
      dist: xenial

    # build Windows installer
    - name: installer
      <<: *x-windows-installer

    # build documentation
    - name: documentation
      python: '3.5'
      before_script:
        - python -m pip install -r docs-requirements.txt
      script: make --directory=docs html

    # deploy documentation
    - stage: deploy
      name: documentation
      if: repo = bastimeyer-test/streamlink-test AND ( branch = travisci-test AND type = push OR tag IS present )
      python: '3.5'
      before_script:
        - python -m pip install -r docs-requirements.txt
        - python -m pip install doctr
      script: make --directory=docs html
      deploy:
        - provider: script
          script: doctr --token "${RELEASES_API_KEY}" deploy latest
        - provider: script
          script: doctr --token "${RELEASES_API_KEY}" deploy .
          on:
            tags: true

    # tagged release
    - stage: deploy
      name: release
      if: repo = bastimeyer-test/streamlink-test AND tag IS present
      python: '3.5'
      before_script: python -m pip install --upgrade wheel twine
      script: ./script/build-and-sign.sh
      deploy:
        - provider: script
          script: ./script/deploy-pypi.sh --dry-run
          skip_cleanup: true
        - provider: releases
          api_key: "${RELEASES_API_KEY}"
          file: "${STREAMLINK_DIST_DIR}/streamlink-${TRAVIS_TAG}.tar.gz{,.asc}"
          file_glob: true
          skip_cleanup: true
        - provider: script
          script: python script/github_releases.py
          skip_cleanup: true

    - stage: deploy
      name: "installer (release)"
      if: repo = bastimeyer-test/streamlink-test AND tag IS present
      <<: *x-windows-installer
      deploy:
        - provider: releases
          api_key: "${RELEASES_API_KEY}"
          file: "${STREAMLINK_INSTALLER_DIST_DIR}/streamlink-${TRAVIS_TAG}.exe"
          skip_cleanup: true

    # cron
    - stage: deploy
      name: "installer (development)"
      if: repo = bastimeyer-test/streamlink-test AND branch = travisci-test AND type = cron
      <<: *x-windows-installer
      before_deploy: ./script/bintrayconfig.sh
      deploy:
        - provider: bintray
          file: build/bintray-nightly.json
          user: "${BINTRAY_USER}"
          key: "${BINTRAY_KEY}"
          skip_cleanup: true
      after_deploy: ./script/bintrayupdate.sh


doctr:
  build-tags: True
  deploy-repo: bastimeyer-test/streamlink-website-test
  require-master: True
