git:
  depth: 999999

os: linux
dist: trusty
sudo: true

language: python

env:
  global:
    - STREAMLINK_DIST_DIR=${TRAVIS_BUILD_DIR}/dist
    - STREAMLINK_INSTALLER_DIST_DIR=${STREAMLINK_DIST_DIR}/nsis
    - SDIST_KEY_FILE="${TRAVIS_BUILD_DIR}/signing.key"


stages:
  - test
  - deploy


install:
  - python --version
  - python -m pip install --disable-pip-version-check --upgrade pip setuptools
  - python -m pip install --upgrade -r dev-requirements.txt
  - python -m pip install pycountry
  - python -m pip install -e .

script:
  - pytest --cov
  - codecov


jobs:
  allow_failures:
    - stage: test
      python: '3.8-dev'
  include:
    # tests: Linux + Windows
    - stage: test
      python: '2.7'
    - python: '3.4'
    - python: '3.5'
    - python: '3.6'
    - python: '3.7'
      dist: xenial
    - python: '3.8-dev'
      dist: xenial
    - python: '2.7'
      os: windows
      language: shell
      before_install:
        - choco install python2
        - export PATH="/c/Python27:/c/Python27/Scripts:$PATH"
        - export TRAVIS_PYTHON_VERSION="2.7"
    - python: '3.4'
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.4.4.20180111
        - export PATH="/c/Python34:/c/Python34/Scripts:$PATH"
        - export TRAVIS_PYTHON_VERSION="3.4"
    - python: '3.5'
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.5.4
        - export PATH="/c/Python35:/c/Python35/Scripts:$PATH"
        - export TRAVIS_PYTHON_VERSION="3.5"
    - python: '3.6'
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.6.8
        - export PATH="/c/Python36:/c/Python36/Scripts:$PATH"
        - export TRAVIS_PYTHON_VERSION="3.6"
    - python: '3.7'
      os: windows
      language: shell
      before_install:
        - choco install python
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
        - export TRAVIS_PYTHON_VERSION="3.7"

    # test documentation
    - name: documentation
      python: '3.5'
      before_script:
        - python -m pip install -r docs-requirements.txt
      script: make --directory=docs html

    # deploy documentation
    - stage: deploy
      name: documentation
      if: repo = streamlink/streamlink AND branch = master AND type = push
      python: '3.5'
      before_script:
        - python -m pip install -r docs-requirements.txt
        - python -m pip install doctr
      script: make --directory=docs html
      deploy:
        - provider: script
          script: doctr deploy latest
        - provider: script
          script: doctr deploy .
          on:
            tags: true

    # tagged release: PyPi + Github
    - stage: deploy
      if: repo = streamlink/streamlink AND branch = master AND type = push AND tag IS present
      python: '3.5'
      script: skip
      deploy:
        - provider: script
          script: ./script/sdistsign.sh
          skip_cleanup: true
        - provider: releases
          api_key: "${RELEASES_API_KEY}"
          file: "${STREAMLINK_DIST_DIR}/streamlink-${TRAVIS_TAG}*"
          file_glob: true
          skip_cleanup: true

    # tagged release: Windows installer + Github
    - stage: deploy
      if: repo = streamlink/streamlink AND branch = master AND type = push AND tag IS present
      python: '3.5'
      addons:
        apt:
          packages:
            - nsis
            - imagemagick
            - inkscape
      before_script: python -m pip install git+https://github.com/takluyver/pynsist.git@88f56f9e86af9c55522147a67f8b7806ac2ca55b
      script: ./script/makeinstaller.sh
      deploy:
        - provider: releases
          api_key: "${RELEASES_API_KEY}"
          file: "${STREAMLINK_INSTALLER_DIST_DIR}/streamlink-${TRAVIS_TAG}.exe"
          file_glob: true
          skip_cleanup: true
        - provider: script
          script: python script/github_releases.py
          skip_cleanup: true

    # cron: Windows installer + Bintray
    - stage: deploy
      if: repo = streamlink/streamlink AND branch = master AND type = cron
      python: '3.5'
      addons:
        apt:
          packages:
            - nsis
            - imagemagick
            - inkscape
      before_script: python -m pip install git+https://github.com/takluyver/pynsist.git@88f56f9e86af9c55522147a67f8b7806ac2ca55b
      script: ./script/makeinstaller.sh
      before_deploy: ./script/bintrayconfig.sh
      deploy:
        - provider: bintray
          file: build/bintray-nightly.json
          user: "${BINTRAY_USER}"
          key: "${BINTRAY_KEY}"
          skip_cleanup: true
      after_deploy: ./script/bintrayupdate.sh


doctr:
  build-tags: True
  deploy-repo: streamlink/streamlink.github.io
  key-path: doctr_deploy_key.enc
  require-master: True
