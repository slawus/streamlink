name: Build, test and deploy

on:
  - push
  - pull_request

jobs:
  test:
    name: Run tests
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        python:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8-dev
        include:
          - python: 3.8-dev
            continue: true
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python}}
      - name: Install dependencies
        shell: bash
        run: ./script/install-dependencies.sh
      - name: Test
        continue-on-error: ${{matrix.continue}}
        shell: bash
        run: pytest --cov && codecov
        env:
          CODECOV_TOKEN: ${{secure.CODECOV_TOKEN}}

  documentation:
    name: Test documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.5
      - name: Install dependencies
        run:
          - ./script/install-dependencies.sh
          - python -m pip install -r docs-requirements.txt
      - name: Build
        run: make --directory=docs html

  windows-installer:
    name: Build Windows installer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.5
      - name: Install dependencies
        run:
          - ./script/install-dependencies.sh
          - python -m pip install pynsist==2.4
          - apt update -qq && apt install -qq -y nsis imagemagick inkscape
      - name: Build
        run: ./scripts/makeinstaller.sh
        env:
          STREAMLINK_INSTALLER_DIST_DIR: ./dist
      - name: Upload artifact
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: windows-installer
          path: dist/streamlink-*.exe

  release:
    name: Build and deploy new release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs:
      - test
      - documentation
      - windows-installer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.5
      - name: Install dependencies
        run:
          - ./script/install-dependencies.sh
          - python -m pip install -r docs-requirements.txt
          - python -m pip install doctr
      - name: Build release documentation
        run: make --directory=docs html
      - name: Download installer artifact
        uses: actions/download-artifact@v1
        with:
          name: windows-installer
      - name: sdist and wheels
        run:
          - python -m pip install --upgrade wheel
          - ./script/build-and-sign.sh
        env:
          RELEASE_SIGN_KEY: ${{secret.RELEASE_SIGN_KEY}}
          RELEASE_SIGN_IV: ${{secret.RELEASE_SIGN_IV}}
      - name: Create Github release
        run: ./script/github_releases.py
        env:
          RELEASES_API_KEY: ${{secrets.RELEASES_API_KEY}}
      - name: Create PyPI release
        run:
          - python -m pip install --upgrade twine
          - ./script/deploy-pypi.sh
        env:
          PYPI_USER: ${{secret.PYPI_USER}}
          PYPI_PASSWORD: ${{secret.PYPI_PASSWORD}}
